[registries]
patina-fw = { index = "sparse+https://pkgs.dev.azure.com/patina-fw/artifacts/_packaging/temporary/Cargo/index/" }

[patch.crates-io]
dxe_core = { path = "core/dxe_core" }
patina_mtrr = { registry = "patina-fw", version = "1" }
patina_paging = { registry = "patina-fw", version = "6" }
section_extractor = { path = "core/section_extractor" }
stacktrace = { path = "core/stacktrace" }
uefi_collections = { path = "core/uefi_collections" }
uefi_cpu = { path = "core/uefi_cpu" }
uefi_debugger = { path = "core/uefi_debugger" }
uefi_depex = { path = "core/uefi_depex" }
uefi_device_path = { path = "core/uefi_device_path" }
uefi_performance = { path = "core/uefi_performance" }
boot_services = { path = "sdk/boot_services" }
driver_binding = { path = "sdk/driver_binding" }
runtime_services = { path = "sdk/runtime_services" }
tpl_mutex = { path = "sdk/tpl_mutex" }
uefi_protocol = { path = "sdk/uefi_protocol" }
uefi_sdk = { path = "sdk/uefi_sdk" }
uefi_sdk_macro = { path = "sdk/uefi_sdk_macro" }
uefi_test = { path = "sdk/uefi_test" }
uefi_test_macro = { path = "sdk/uefi_test_macro" }

[net]
git-fetch-with-cli = true

# This tells cargo to consider the MSV of rust for our crate vs our dependencies.
[resolver]
incompatible-rust-versions = "fallback"
