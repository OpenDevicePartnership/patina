[package]
name = "dxe_core"
version = "0.1.8"
edition = "2021"
readme = "../README.md"
description = "A pure rust implementation of the UEFI DXE Core."
license.workspace = true
repository.workspace = true

[lib]
name = "dxe_core"
path = "src/lib.rs"

# Metadata to tell docs.rs how to build the documentation when uploading
[package.metadata.docs.rs]
features = ["doc"]

[[bin]]
name = "dxe_core_x64"
path = "bin/x64.rs"
required-features = ["x64"]

[[bin]]
name = "dxe_core_std"
path = "bin/std.rs"
required-features = ["std"]

[[bin]]
name = "dxe_core_aarch64"
path = "bin/aarch64.rs"
required-features = ["aarch64"]

[dependencies]
corosensei = { workspace = true }
crc32fast = { workspace = true }
lazy_static = { workspace = true }
log = { workspace = true }
uefi_core = { workspace = true }
uefi_cpu = { workspace = true }
uefi_logger = { workspace = true }
section_extractor = { workspace = true }
uefi_component_interface = { workspace = true }
serial_writer = { workspace = true }
mu_pi = { workspace = true }
mu_rust_helpers = { workspace = true }
r-efi = { workspace = true }
spin = { workspace = true}
uuid = { workspace = true }

uefi_gcd = { workspace = true }
uefi_protocol_db = { workspace = true }
uefi_allocator = { workspace = true }
uefi_device_path = { workspace = true }
uefi_event = { workspace = true }
uefi_depex = { workspace = true}
uefi_pecoff = { workspace = true }
uefi_tpl_lock = { workspace = true }

adv_logger = { workspace = true }
sample_components = { workspace = true }

[features]
default = []
std = ["uefi_logger/std", "serial_writer/std"]
x64 = []
aarch64 = []
doc = ["uefi_cpu/doc"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
