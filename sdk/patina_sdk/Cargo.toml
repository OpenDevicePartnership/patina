[package]
name = "patina_sdk"
resolver = "2"
version.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true
publish.workspace = true
description = "UEFI Software Development Kit (SDK) that provides common types and functionality used in UEFI development."

[[bench]]
name = "bench_component"
harness = false

[[bench]]
name = "bench_service"
harness = false

[dependencies]
patina_sdk_macro = { workspace = true }
fixedbitset = { workspace = true }
mu_pi = { workspace = true }

cfg-if = { workspace = true }
log = { workspace = true }
r-efi = { workspace = true }
mockall = { workspace = true, optional = true }
fallible-streaming-iterator = { workspace = true }
linkme = { workspace = true}

[target.'cfg(target_arch="x86_64")'.dependencies]
x86_64 = { workspace = true, features = [
  "instructions",
] }
uart_16550 = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
mockall = { workspace = true }

[features]
core = ['alloc']
std = []
doc = ['alloc']
alloc = []
mockall = ["dep:mockall", "std"]
global_allocator = []
default = []
off = ["patina_sdk_macro/off"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
