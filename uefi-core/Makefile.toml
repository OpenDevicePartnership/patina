[config]
default_to_workspace = false

[env]
RUSTC_BOOTSTRAP = 1
NO_STD_FLAGS = "--profile ${RUSTC_PROFILE} -Zbuild-std=core,compiler_builtins,alloc -Zbuild-std-features=compiler-builtins-mem -Zunstable-options --timings=html"
UEFI_CRATES = "-p uefi_cpu_init -p uefi_logger -p section_extractor -p serial_writer -p uefi_interrupt"
BUILD_CRATES = "-p uefi_core"

[env.development]
RUSTC_PROFILE = "dev"
RUSTC_TARGET = "debug"

[env.release]
RUSTC_PROFILE = "release"
RUSTC_TARGET = "release"

[tasks.build]
description = """Builds a single rust package with the standard library.

Customizations:
    -p [development|release]: Builds in debug or release. Default: development

Example:
    `cargo make build`
    `cargo make -p release build`
"""
alias = "build-std"

[tasks.build-std]
description = """Builds a single rust package.

Customizations:
    -p [development|release]: Builds in debug or release. Default: development

Example:
    `cargo make build-std`
"""
clear = true
command = "cargo"
args = ["build", "--profile", "${RUSTC_PROFILE}", "--features", "std", "--target", "${CARGO_MAKE_RUST_TARGET_TRIPLE}", "@@split(BUILD_CRATES, )", "@@split(UEFI_CRATES, )"]

[tasks.build-x64]
description = """Runs the standard library DXE core.

Example:
    `cargo make build-x64`
    `cargo make -p release build-x64`
"""
clear = true
command = "cargo"
args = ["build", "--target", "x86_64-unknown-uefi", "@@split(NO_STD_FLAGS, )", "@@split(UEFI_CRATES, )"]

[tasks.build-aarch64]
description = """Runs the standard library DXE core.

Example:
    `cargo make build-aarch64`
    `cargo make -p release build-aarch64`
"""
clear = true
command = "cargo"
args = ["build", "--target", "aarch64-unknown-uefi", "@@split(NO_STD_FLAGS, )", "@@split(UEFI_CRATES, )"]

[tasks.check_no_std]
description = "Checks rust code for no_std build errors with results."
private = true
command = "cargo"
args = ["check", "@@split(NO_STD_FLAGS, )", "@@split(CARGO_MAKE_TASK_ARGS, )", "--target", "x86_64-unknown-uefi", "--target", "aarch64-unknown-uefi"]

[tasks.check_std]
description = "Checks rust code for std build errors with results."
private = true
command = "cargo"
args = ["check", "@@split(CARGO_MAKE_TASK_ARGS, )"]

[tasks.check]
description = "Checks rust code for errors. Example `cargo make check`"
clear = true
run_task = [{ name = ["check_no_std", "check_std"], parallel = true }]

[tasks.test]
description = "Builds all rust tests in the workspace. Example `cargo make test`"
clear = true
command = "cargo"
args = ["test"]

[tasks.coverage]
description = "Build and run all tests and calculate coverage."
clear = true
command = "cargo"
args = ["tarpaulin", "--output-dir", "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target"]

[tasks.clippy]
description = "Run cargo clippy."
clear = true
command = "cargo"
args = ["clippy", "--all-targets", "--", "-D", "warnings"]

[tasks.doc]
env = { RUSTDOCFLAGS = "-D warnings"}
description = "Builds all rust documentation in the workspace. Example `cargo make doc`"
command = "cargo"
args = ["doc", "@@split(INDIVIDUAL_PACKAGE_TARGETS, )", "--features", "doc", "--open"]
